<?php
class BibdkCartTestCase extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => t('Bibdk Cart test'),
      'description' => t('Test Cart functionality'),
      'group' => t('Bibliotek.dk - Cart'),
    );
  }

  public function setUp() {
    parent::setUp('bibdk_cart', 'ting_openformat');
    variable_set('ting_search_url', 'lakiseks.dbc.dk/openbibdk/0.5/');
  }

  public function testRunner(){
    $this->testAjaxReesponse();
    $this->testBibdkCartObject();
  }

  private function testBibdkCartObject(){
    BibdkCart::emptyCart();
    // empty cart
    $result = BibdkCart::getAll();
    $expected_result = array();
    $this->assertEqual($result, $expected_result);

    // test add
    BibdkCart::add('test1');
    BibdkCart::add(array('test2', 'test3'));
    $result = BibdkCart::getAll();
    $expected_result = array(
      'test1' => 'test1',
      'test2' => 'test2',
      'test3' => 'test3',
    );
    $this->assertEqual($result, $expected_result, 'objects added');

    // test remove
    BibdkCart::remove('test1');
    BibdkCart::remove(array('test2'));
    $result = BibdkCart::getAll();
    $expected_result = array(
      'test3' => 'test3',
    );
    $this->assertEqual($result, $expected_result, 'objects removed');

    // test checkInCart
    $this->assertTrue(BibdkCart::checkInCart('test3'), 'testObject 3 exists in card');
    $this->assertFalse(BibdkCart::checkInCart('test1'), 'testObject 1 does not exists in card');


    // test empty cart
    BibdkCart::emptyCart();
    $result = BibdkCart::getAll();
    $expected_result = array();
    $this->assertEqual($result, $expected_result);

  }

  /**
   * Tests the output data of bibdk_adhl.ajax.inc
   */
  private function testAjaxReesponse() {
    $pid = '870970-basis:29225605';
    $url = $this->getAbsoluteUrl('cart/ajax');
    $options = array(
      'query' => array(
        'pid' => $pid,
      ),
    );
    $result = $this->drupalGetAJAX($url, $options);
    $this->assertEqual($result['pid'], $pid, 'Received pid correctly');
    $this->assertEqual($result['cartcount'], 1, 'Correct amount in cart');
  }
}
