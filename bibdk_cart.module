<?php

// Load Field module hooks.
module_load_include('inc', 'bibdk_cart', 'bibdk_cart.field');

/**
 * Implements hook_menu().
 */
function bibdk_cart_menu() {
  $items['cart/ajax'] = array(
    'page callback' => 'bibdk_cart_add_to_cart',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'bibdk_cart.ajax.inc',
  );
  $items['user/cart'] = array(
    'title' => t('Cart'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bibdk_cart_view_form'),
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK,
    //'file' => 'bibdk_cart.ajax.inc',
  );
  return $items;
}

/*
 * Implements hook_theme().
 */
function bibdk_cart_theme() {
  return array(
    'bibdk_cart_button' => array(
      'variables' => array('add_to_cart' => ''),
      'template' => 'theme/bibdk-cart-button',
    ),
  'bibdk_cart_manifestation' => array(
    'template' => 'theme/bibdk-cart-manifestation',
    ),
  );
}


/**
 * Implememts hook_user_profile_tabs (
 *
 * @see ding_user.module)
 * */
function bibdk_cart_user_profile2_tabs() {
  $ret = new stdClass();
  $ret->label = t('cart');
  $ret->form = 'bibdk_cart_form';
  $ret->type = 'bibdk_cart_list';
  return $ret;
}


/**
 * List view of cart
 *
 * @param $form
 * @param $form_state
 * @return array
 */

function bibdk_cart_view_form($form, &$form_state) {
  global $user;
  if ($user->uid) {
    drupal_goto('user/' . $user->uid . '/edit/bibdk_cart_list');
  }
  return bibdk_cart_form($form, $form_state);
}

function bibdk_cart_form($form, &$form_state){
  $cart = BibdkCart::getAll();
  foreach($cart as $pid)
    $pids[] = $pid;
  $manifestations = bibdk_cart_get_manifestations($pids);
  foreach($manifestations as  $manifestation)
    $views[] = bibdk_cart_manifestation_view($manifestation);

  $form['wrapper'] = array(
    '#type' => 'fieldset',
    '#description' => t('cart_description'),
  );
  $form['wrapper']['content'] = array(
    '#markup' => drupal_render($views),
  );
  return $form;
}

function bibdk_cart_get_manifestations($pids){
  /**
   * ting_openformat_get_manifestations returns a bibdkWork as an array and all
   * the manifestations are saved in the manifestations variable.
   * TODO :ting_openformat should have a method to return an array of manifestations
   */
  $works = ting_openformat_get_manifestations($pids);
  $work = reset($works);
  return (isset($work->manifestations)) ? $work->manifestations : null;
}

function bibdk_cart_manifestation_view(manifestation $manifestation){
   return ting_openformat_manifestation_view($manifestation, 'cart');
}


/**
 * Implements hook_entity_info_alter().
 */
function bibdk_cart_entity_info_alter(&$entity_info) {
  $entity_info['bibdkManifestation']['view modes']['cart'] = array(
    'label' => t('Cart'),
    'custom settings' => TRUE,
  );
}

function bibdk_cart_preprocess_ting_openformat_manifestation(&$vars){
  if($vars['view_mode'] == 'cart') {
    $vars['theme_hook_suggestions'][] = 'bibdk_cart_manifestation';
  }
}
